function XY8_N
global gmSEQ gSG
gSG.bfixedPow=1;
gSG.bfixedFreq=1;
gSG.bMod='IQ';
gSG.bModSrc='External';

[gmSEQ.ScaleT, gmSEQ.ScaleStr] = GetScale(gmSEQ.To);

arr = gmSEQ.SweepParam;
max_index = length(arr);
m = gmSEQ.m;
index_m = find(arr ==m); %find the index of the current t
index_n = 1 + max_index - index_m; %find the index of the differential t
n = m; %find the differential t

pre_init_wait = 10000;
init_dur = gmSEQ.readout;
readout_dur = gmSEQ.CtrGateDur;
post_init_wait = 2000; %wait time after init
post_seqMW_wait = 2000; %wait time between the last pulse and the readout
pi_half = gmSEQ.pi_half;
pi = gmSEQ.pi;
tau = 50; %2tau is interpulse spacing
XY8_dur = 16*tau+8*pi;
q = 20; %rise time for the iq signal

T_green_1_start = pre_init_wait;
T_green_2_start = T_green_1_start + init_dur + post_init_wait + pi_half*2 + XY8_dur*m + post_seqMW_wait;
T_green_3_start = T_green_2_start + init_dur + pre_init_wait;
T_green_4_start = T_green_3_start + init_dur + post_init_wait + pi_half*2 + XY8_dur*n + post_seqMW_wait;

%write a single xy-8 T and DT for MW, X/Y iq.
MW_XY8_T = [tau,2*tau,2*tau,2*tau,2*tau,2*tau,2*tau,2*tau,tau]; 
MW_XY8_DT = [pi,pi,pi,pi,pi,pi,pi,pi];
X_XY8_T = [tau-q, 4*tau+pi-2*q,6*tau+2*pi-2*q,4*tau+pi-2*q,tau-q];
X_XY8_DT = [pi+2*q,pi+2*q,pi+2*q,pi+2*q];
Y_XY8_T = [3*tau+pi-q,4*tau+pi-2*q,2*tau-2*q,4*tau+pi-2*q,3*tau+pi-2*q];
Y_XT8_DT = [pi+2*q,pi+2*q,pi+2*q,pi+2*q];

if strcmp(gmSEQ.meas,'APD')
    gmSEQ.CtrGateDur = 1000;
end

gmSEQ.CHN(1).PBN=PBDictionary('ctr0');
gmSEQ.CHN(1).NRise=4;
gmSEQ.CHN(1).T=[T_green_1_start,T_green_2_start,T_green_3_start,T_green_4_start]; 
gmSEQ.CHN(1).DT=[readout_dur,readout_dur,readout_dur,readout_dur];    

gmSEQ.CHN(2).PBN=PBDictionary('GreenAOM');
gmSEQ.CHN(2).NRise=4;
gmSEQ.CHN(2).T=[T_green_1_start,T_green_2_start,T_green_3_start,T_green_4_start]; 
gmSEQ.CHN(2).DT=[init_dur,init_dur,init_dur,init_dur];    

gmSEQ.CHN(3).PBN=PBDictionary('MWSwitch');
gmSEQ.CHN(3).NRise=(m+n)*8+4;

%first half of the differential measurement 
m_MW_T = [T_green_1_start+pre_init_wait+init_dur+post_init_wait,...
    repmat(MW_XY8_T,[1,m])...
    ];
m_MW_DT = [pi_half,...
    repmat(MW_XY8_DT,[1,m])...
    pi_half];

%second half of the differential measurement 
n_MW_T = [post_pre_init_wait+init_dur*2+post_init_wait,...
    repmat(MW_XY8_T,[1,n])...
    ];
n_MW_DT = [pi_half,...
    repmat(MW_XY8_DT,[1,n])...
    pi_half];


T=[T_green_1_start+init_dur+post_init_wait,...
    post_MW_wait+m,...
    post_MW_wait+m,...
    post_MW_wait+pre_init_wait+init_dur*2+post_init_wait+pre_readout_wait,...
    post_MW_wait+n,...
    post_MW_wait+n]; 
DT=[pi_half,gmSEQ.pi,pi_half,pi_half,gmSEQ.pi,pi_half];    
ConstructSeq(T,DT)



gmSEQ.CHN(4).PBN=PBDictionary('+X');
gmSEQ.CHN(4).NRise=5;
T=[T_green_1_start+init_dur+post_init_wait-q,...
    post_MW_wait+m-2*q,...
    post_MW_wait+m-2*q,...
    post_MW_wait+pre_init_wait+init_dur*2+post_init_wait-2*q+pre_readout_wait,...
    post_MW_wait+n-2*q]; 
DT=[pi_half+2*q,gmSEQ.pi+2*q,pi_half+2*q,pi_half+2*q,gmSEQ.pi+2*q];    
ConstructSeq(T,DT)

gmSEQ.CHN(5).PBN=PBDictionary('-X');
gmSEQ.CHN(5).NRise=1;
T=[T_green_4_start-post_MW_wait-pi_half-q-pre_readout_wait]; 
DT=[pi_half+2*q];    
ConstructSeq(T,DT)

gmSEQ.CHN(6).PBN=PBDictionary('dummy1');
gmSEQ.CHN(6).NRise=2;
T=[0,T_green_4_start-20]; 
DT=[20,20];    
ConstructSeq(T,DT)

ApplyDelays();

